#+title: 博客搭建的python脚本

**** 故事开始

我的博客用emacs写的org文档。而这种文档导出来之后放在github上其界面太丑了。

于是我增加了css，又增加了syntaxhighlighter功能。这时候要解决syntaxhightlighter标签与org导出标签冲突的问题。

我将其利用python写了个脚本。自动将标签转化过来。

后来在配置syntaxhighlighter的时候发现太多js了，我用不了，而且会影响网页效率。

于是又增加了一个功能是grep每个html文件，用到哪个js再在html头上增加上对应的js即可。。


**** py脚本

#+BEGIN_SRC python
#!/usr/bin/env python
# -*- encoding:utf-8 -*-

import os
import sys
import pexpect
import time
import ConfigParser

config_file_name = 'config_vpn.conf'
net_info = {'local_gw':'192.168.1.1',\
        'local_netmask':'255.255.255.0',\
        'net':'119.119.109.25',\
        'net_netmask':'255.255.255.255',\
        'net_gw':'192.168.0.1'}

def get_network_info():
    conf = ConfigParser.ConfigParser()
    conf.read(config_file_name)
    global net_info

    '''
        [local]
        local_gw = 192.168.1.1
        local_netmask = 255.255.255.0
        [net]
        net = 119.119.109.25
        net_netmask = 255.255.255.255
        net_gw = 192.168.0.1
    '''
    # get the name of section
    local_gw = conf.get('local', 'local_gw')
    net_info['local_gw'] = local_gw


    local_netmask = conf.get('local', 'local_netmask')
    net_info['local_netmask'] = local_netmask


    net = conf.get('net', 'net')
    net_info['net'] = net

    net_netmask = conf.get('net', 'net_netmask')
    net_info['net_netmask'] = net_netmask

    net_gw = conf.get('net', 'net_gw')
    net_info['net_gw'] = net_gw

def config_route(net_info):
    if os.sys.platform == 'darwin':
        print '=====mac os X platform...'
        os.system('route -n add -net %s -netmask %s %s' % (net_info['net'], net_info['net_netmask'], net_info['local_gw']))
        os.system('route -n delete default')
        os.system('route -n add default %s' % (net_info['net_gw']))
        print '=====mac os X set success.....'
    else:
        print '=====unix platform....'
        os.system('route add -net %s netmask %s gw %s', net_info['net'], net_info['net_netmask'], net_info['local_gw'])

        os.system('route del -net default')
        os.system('route del -net 0.0.0.0')
        os.system('route add default gw %s' % (net_info['net_gw']))

# 2. open the vpn 'openvpn /etc/openvpn/client.ovpn'

if __name__ == '__main__':
    login_password = '*******'
    os.system('killall -9 openvpn')
    global net_info

    get_network_info()
    print('=======================')
    for i in net_info.keys():
        print('%s=>%s' % (i, net_info[i]))

    # cmd = 'openvpn --config /etc/openvpn/client.ovpn --ca /etc/openvpn/ca.crt \
    #        --cert /etc/openvpn/liwei.crt --key /etc/openvpn/liwei.key \
    #        --tls-auth /etc/openvpn/ta.key'
    cmd = '/usr/local/sbin/openvpn \
            --config /Users/liweilijie/software/liwei/client.ovpn \
            --ca /Users/liweilijie/software/liwei/ca.crt \
            --cert /Users/liweilijie/software/liwei/liwei.crt \
            --key /Users/liweilijie/software/liwei/liwei.key \
            --tls-auth /Users/liweilijie/software/liwei/ta.key'
    child = pexpect.spawn(cmd, timeout=10)
    child.logfile = sys.stdout
    print child.before
    while True:
        index = child.expect(['.* Password.*', pexpect.EOF, pexpect.TIMEOUT])
        if index == 0:
            child.sendline(login_password)
            print '=====password send ok============'
            index = child.expect(['.* Completed.*', pexpect.EOF, pexpect.TIMEOUT])
            while True:
                if index == 0:
                    print '======Completed ok=========='
                    config_route(net_info)
                    break
                else:
                    print '===wait wait wait wait wait.....==='
                    time.sleep(5)
        else:
            pass


#+END_SRC


这里第一个函数会去读取配置文件，因为有时候我会在家里用，有时候可能会在大丰那边用。

我抱着笔记本到处跑。所以写了个配置文件保存本地网关的信息。

#+BEGIN_SRC text
[local]
local_gw = 192.168.9.1
local_netmask = 255.255.255.0
[net]
net = 119.119.109.25
net_netmask = 255.255.255.255
net_gw = 192.168.0.1

#+END_SRC

虽然没有注释，应该不难看明白吧。

**** shell自动上传到github上

#+BEGIN_SRC bash

#!/usr/bin/sh
cd /Users/liweilijie/repo/atom/pages
git add .
git commit -a -m "`date` by mac os x"
git push origin master
echo "pages success..."

python /Users/liweilijie/upload_github.py
echo "htmlize over..."
cd /Users/liweilijie/repo/atom/www
git add .
git commit -a -m "`date` by mac os x"
git push origin master
echo "www success..."


#+END_SRC

